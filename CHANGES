1.2.0 201912xx
  BF: Composite: Wrapper of XMLHttpRequest.open correction for using all passed arguments 
  BF: Composite Asynchron: Corection of passed arguments
  BF: Composite Events: Composite.EVENT_RENDER_END now includes the mounting of models
  BF: Composite Mount Synchronization: Correction for the input-elements: select, radio, checkbox 
  BF: Composite Render Condition: Exclusive use of the placeholder
      Output now delegates consistently to the placeholder.
  BF: Composite Render Include: Optimization/correction of the strategy
      When importing modules in combination with conditions (placeholder/template)
  BF: Composite Render Include: Loading and inserting HTML content for elements
      Is now done directly and is no longer delegated to the renderer via the IMPORT attribute.
  BF: Composite Expression Parse: Correction of the detection of value- and method-expressions
  BF: Composite Lock Managment: Queue progress only after release functionality
  BF: Extension Capitalize: Correction for use with empty strings
  BF: MVC: Correction of the embedded use of SiteMap.accept(path)
  BF: MVC: Correction of initial forwarding from / to /#
  CR: Test: (Re)Move of Assert.assertEqualsTo as Assert.assertSameTo in /test/modules/common.js
  CR: Test: Enhancement of console output monitoring
  CR: Test: Optimization of console forwarding
  CR: Test: Extension of console forwarding by listeners
  CR: Test: Extension for passing events (Test + Console) to the enclosing object when using frames 
  CR: Test: Extension for central catching of errors with activated Test-AP
  CR: Test Suite: Optimization of error output
  CR: Composite Object Lookup: Added support now for arrays (also associative)
      In additional ':' is accepted as separator, so that the syntax is more understandable
      e.g. model.array:1 / model.object:property
  CR: Composite Render: Extension with the attribute 'release' as an indicator that an element was rendered.
      Can be used to control visibility so that only final rendered output/content is visible.
      CSS: *[release] {display:none;}      
  CR: Composite Render: Support of expressions for all composite / render attributes (new ID and EVETNS)    
  CR: Composite Render Iterate: Correction/Optimization in general
  CR: Composite Render Attributes: undefined as return value of an expression deletes an attribute
      The deletion is only temporary, the renderer still knows the attribute and checks it again in each render cycle.
  CR: Composite Scan: Omission of the intermediate step between render and mount
  CR: Composite Mount: Revision of the object/model binding
  CR: Composite Mount: Stricter use of the hierarchy of IDs in the DOM
  CR: Composite Mount Validation: Change to two-phase validation (HTML5 + model-based validation)
  CR: Composite Mount Validation: Has a direct effect on synchronization, action and default action of the browser
      Everyone expects a valid validation if a validation exists.
  CR: Composite Mount Validation: Enhancement with the attribute message for error output
      The message can have pipe-separated directives to control output for title and report.
      e.g. T|R:Mandatory in the numerical range from 1 to 100.
  CR: Composite Mount Validation: Relocation to own method Composite.validate(selector)
      Can be (re)used to implement own validation methods in the models.
  CR: Composite Mount Synchronization: Optimization
  CR: Composite Mount Action: The return value false can cancel the default action of the browser
  CR: Composite Mount Locate: Stricter use of the hierarchy of IDs in the DOM
      The hierarchy of IDs in the DOM defines the model and sub-models.
      Absolute and relative IDs in the markup are completely omitted.
  CR: Composite Mount Locate: Stricter use of property and qualifier (name)
  CR: Composite Mount Lookup: Stricter use of property and qualifier (name)
  CR: Composite Mount Synchronization: Extension by the detection and use of setter (object accessors)
  CR: Composite Release: Addition of the CSS rule when the page is loaded
  CR: Composite Hardening: Added optional hardening from markup
      Hardening makes it difficult to manipulate the attributes in the markup.
  CR: Composite Include: Modules with a condition are only reloaded if the condition is true
  CR: MVC: Omission of autofocus, since the use scrollIntoView can be too individual
      The own implementation is very simple and much flexible.
      window.addEventListener("hashchange", (event) => {
          var path = Path.normalize(event.newURL || "#");
          var target = SiteMap.lookup(path);
          if (target) {
              target = target.facet || target.face;
              if (target) {
                  target = target.replace(/(?!=#)#/, " #");
                  target = document.querySelector(target);
                  if (target) {
                      target.scrollIntoView(true);
                      target.focus();
                  }
              }
          }
      }); 
  CR: DataSource Locales: As standard marked are at the beginning
  CR: Extension Uncapitalize: Adds a uncapitalize function to the String objects
  CR: Extension: Added Math.uniqueSerialId to create serial (U)UIDs
  CR: Extension: Optimization for using readonly meta objects for return values
  CR: Messages: Update to use constant key/value pairs
  CR: Build: Optimization of target 'changes'      
  CR: Build: Additional compression via javascript-minifier.com
      Less than 64kB are reached 

1.1.0 20190530
  BF: Build: Optimization/correction when creating releases 
  BF: DataSource: Correction if no DataSource exists
  BF: Messages: Correction if no DataSource exists
  CR: DataSource: Added the changing of localization via DataSource.localize(locale)
  CR: Messages: Added the changing of localization via DataSource.localize(locale)
  CR: Project: Added support for jsdelivr.com
  
1.0.0 20190515
  NT: Release is available 
