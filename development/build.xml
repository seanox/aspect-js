<?xml version="1.0" ?>
<project name="aspect-js" default="usage" basedir="..">
  <target name="usage">
    <echo>                                                    </echo>
    <echo> the following targets are available ...            </echo>
    <echo>                                                    </echo>
    <echo>   archive    builds the final scripts and creates  </echo>
    <echo>              the archives for the distribution.    </echo>
    <echo>                                                    </echo>
    <echo>   changes    synchronizes README.md with CHANGES   </echo>
  </target>
  
  <property name="workspace" value="${basedir}"/>
  <property name="workspace.sources" value="${workspace}/sources"/>
  <property name="workspace.test" value="${workspace}/test"/>
  <property name="workspace.releases" value="${workspace}/releases"/>
  
  <fileset id="fileset.sources" dir="${workspace.sources}">
    <include name="extension.js"/>
    <include name="datasource.js"/>
    <include name="messages.js"/>
    <include name="composite.js"/>
    <include name="mvc.js"/>
    <include name="test.js"/>
  </fileset>   
  
  <fileset id="fileset.project" dir="${workspace}">
    <include name="development/build.xml"/>
    <!-- include name="manual/**/*.md"/ -->
    <include name="sources/*.js"/>
    <include name="test/**/*.*"/>
    <include name=".project"/>
    <include name="CHANGES"/>
    <include name="LICENSE"/>
    <include name="README.md"/>
    <exclude name="**/aspect-js.js"/>
    <exclude name="**/*.zip"/>
  </fileset>   
    
  <macrodef name="release-locate">
    <sequential>
      <copy file="CHANGES" tofile="CHANGES.tmp" overwrite="true"/>
      <replaceregexp file="CHANGES.tmp"
        match="(?s)^\s*([\d\.x]+) (\d{4})([\dx]+).*$" flags="g" byline="false"
        replace="release.version=\1&#x000D;release.year=\2&#x000D;release.date=\2\3&#x000D;"/>
      <replaceregexp file="CHANGES.tmp" match="x+" replace="0000" flags="g" byline="false"/>
      <loadproperties>
        <file file="CHANGES.tmp"/>
      </loadproperties>
      <delete file="CHANGES.tmp"/>
      <echo file="CHANGES.tmp" message="release.major=${release.version}"/>
      <replaceregexp file="CHANGES.tmp"
        match="(?&lt;=\d+)\." byline="true" replace="&#x000D;release.minor="/>
      <replaceregexp file="CHANGES.tmp"
        match="(?&lt;=\d+)\." byline="true" replace="&#x000D;release.patch="/>
      <loadproperties>
        <file file="CHANGES.tmp"/>
      </loadproperties>
      <delete file="CHANGES.tmp"/>
    </sequential>
  </macrodef> 
  
  <macrodef name="compress-javascript">
    <attribute name="file"/>
    <sequential>
      <echo>Compressing: @{file}</echo>
      <replaceregexp file="@{file}" match="([^\s\\])(/\*)" flags="g" replace="\1\\\\\2" byline="false"/>
      <replaceregexp file="@{file}" match="([^\s\\])(/)(/)" flags="g" replace="\1\\\\\2\\\\\2" byline="false"/>
      <replaceregexp file="@{file}" match="(?s)(?&lt;!\\)\/\*.*?\*/" flags="g" replace="" byline="false"/>
      <replaceregexp file="@{file}" match="\s*//.*$" flags="g" replace="" byline="true"/>
      <replaceregexp file="@{file}" match="\t" flags="g" replace=" " byline="true"/>
      <replaceregexp file="@{file}" match="(?s)\s*[\r\n]+" flags="g" replace="${line.separator}" byline="false"/>
      <replaceregexp file="@{file}" match="(?s)(\{)[\r\n]+\s*" flags="g" replace="\1" byline="false"/>
      <replaceregexp file="@{file}" match="(?s)[\r\n]+ +(?=\})" flags="g" replace="" byline="false"/>
      <replaceregexp file="@{file}" match="(?s)[\r\n]+ +(?!\})" flags="g" replace=" " byline="false"/>
      <replaceregexp file="@{file}" match="(?s)[\r\n]+ *(\})" flags="g" replace="\1" byline="false"/>
      <replaceregexp file="@{file}" match="(?i)[\r\n]+([a-z0-9_\.]+\s*[=;])" flags="g" replace=" \1" byline="false"/>
      <replaceregexp file="@{file}" match="^\s+" flags="g" replace="" byline="false"/>
      <replaceregexp file="@{file}" match="\s+$" flags="g" replace="" byline="true"/>
    </sequential>
  </macrodef>
  
  <target name="changes">
    <replaceregexp file="${workspace}/CHANGES" match="&#x00E4;" replace="ae" flags="g"/>
    <replaceregexp file="${workspace}/CHANGES" match="&#x00C4;" replace="Ae" flags="g"/>
    <replaceregexp file="${workspace}/CHANGES" match="&#x00F6;" replace="oe" flags="g"/>
    <replaceregexp file="${workspace}/CHANGES" match="&#x00D6;" replace="Oe" flags="g"/>
    <replaceregexp file="${workspace}/CHANGES" match="&#x00FC;" replace="ue" flags="g"/>
    <replaceregexp file="${workspace}/CHANGES" match="&#x00DC;" replace="Ue" flags="g"/>
      
    <copy file="${workspace}/CHANGES" tofile="${workspace}/CHANGES.tmp" overwrite="true"/>
    <replaceregexp file="${workspace}/CHANGES.tmp" match="^\s+" replace="" byline="false"/>
    <replaceregexp file="${workspace}/CHANGES.tmp" match="(?s)^(.*?)[\r\n]+\d[\d\. x]+.*$" replace="\1" byline="false"/>
    <replaceregexp file="${workspace}/CHANGES.tmp" match="^(.*?)\s*$" replace="\1  " flags="g" byline="true"/>
    <replaceregexp file="${workspace}/CHANGES.tmp" match="^(\d[\.\d x]+)[^\r\n]*" replace="## \1" byline="false"/>
    <replaceregexp file="${workspace}/CHANGES.tmp" match="^ {0,4}([A-Z]+:.*)\s*$" replace="\1" byline="true"/>
    <replaceregexp file="${workspace}/CHANGES.tmp" match="(?s)[\r\n]+ [^\r\n]+" replace="" flags="g" byline="false"/>  
    <replaceregexp file="${workspace}/CHANGES.tmp" match="^(## \d[\.\d]+ \d+)(  )" replace="\1 (summary of the current version)\2" flags="g" byline="true"/>
    <replaceregexp file="${workspace}/CHANGES.tmp" match="^(## \d[\.\d]+ [\dx]+)(  )" replace="\1 (summary of the next version)\2" flags="g" byline="true"/>
    <loadresource property="changes">
      <file file="${workspace}/CHANGES.tmp"/>
    </loadresource>
    <delete file="${workspace}/CHANGES.tmp"/>
    <replaceregexp file="${workspace}/README.md"
      match="(?si)(# Changes \(Change Log\)\s+).*?(\[Read more\])" flags="g" byline="false"
      replace="\1${changes}${line.separator}${line.separator}\2"/>
    <tstamp>
      <format property="now.year" pattern="yyyy"/>
    </tstamp>    
    <replaceregexp file="${workspace}/README.md"
      match="(?si)(?&lt;=\(C\)\s)\d{4}\b" flags="g" byline="true"
      replace="${now.year}"/>  
  </target>  
  
  <target name="archive">
    <release-locate/>

    <delete dir="${workspace.releases}" excludes="*.zip"/>
    
    <property name="release.dev" value="${workspace.releases}/${ant.project.name}-${release.major}.x.js"/>
    <concat destfile="${release.dev}" append="false">
      <filelist dir="${workspace.sources}">
        <file name="extension.js"/>
        <file name="datasource.js"/>
        <file name="messages.js"/>
        <file name="composite.js"/>
        <file name="mvc.js"/>
        <file name="test.js"/>
      </filelist>   
    </concat>
    <replaceregexp file="${release.dev}" match="(?s)(?&lt;=\S)(/\*\*)" flags="g" replace="${line.separator}${line.separator}\1" byline="false"/>
    <replaceregexp file="${release.dev}" match="(?s)(?&lt;=.)(?:(/\*(?:\*\s+)+)LIZENZBEDINGUNGEN.*?----\s+(?:\s*\*\s+)*)" flags="g" replace="\1" byline="false"/>
    <copy file="${release.dev}" tofile="${workspace.releases}/${ant.project.name}.js" overwrite="true"/>
    
    <property name="release.min" value="${workspace.releases}/${ant.project.name}-${release.major}.x-min.js"/>
    <copy file="${release.dev}" tofile="${release.min}" overwrite="true"/>
    <replaceregexp file="${release.min}" match="(?s)(?&lt;=\S)(/\*\*)" flags="g" replace="${line.separator}${line.separator}\1" byline="false"/>
    <java classname="Compress" classpath="${workspace}/compress/compress.jar" fork="yes">
      <arg value="${release.min}"/>    
    </java>    
    <copy file="${release.min}" tofile="${workspace.releases}/${ant.project.name}-min.js" overwrite="true"/>
    
    <copy file="CHANGES" tofile="${workspace.releases}/release.txt"/>
    <copy file="LICENSE" tofile="${workspace.releases}/license.txt"/>
    <touch datetime="${release.date}" pattern="yyyyMMdd">
      <fileset dir="${workspace.releases}" includes="${ant.project.name}-${release.major}.x.js"/>
      <fileset dir="${workspace.releases}" includes="${ant.project.name}-${release.major}.x-min.js"/>
      <fileset dir="${workspace.releases}" includes="release.txt"/>
      <fileset dir="${workspace.releases}" includes="license.txt"/>
    </touch>     
    <delete file="${workspace.releases}/${ant.project.name}-${release.version}.zip"/>
    <zip destfile="${workspace.releases}/${ant.project.name}-${release.version}.zip">
      <fileset dir="${workspace.releases}" includes="${ant.project.name}-${release.major}.x.js"/>
      <fileset dir="${workspace.releases}" includes="${ant.project.name}-${release.major}.x-min.js"/>
      <fileset dir="${workspace.releases}" includes="release.txt"/>
      <fileset dir="${workspace.releases}" includes="license.txt"/>
    </zip>   
    
    <delete>
      <fileset dir="${workspace.releases}">
        <exclude name="*.js"/>
        <exclude name="*.zip"/>
      </fileset>
    </delete>
    
    <delete dir="${workspace.releases}/temp"/>
    <mkdir dir="${workspace.releases}/temp/${ant.project.name}-${release.version}"/>
    <copy todir="${workspace.releases}/temp/${ant.project.name}-${release.version}">
      <fileset refid="fileset.project"/>
    </copy>
    <touch datetime="${release.date}" pattern="yyyyMMdd">
      <fileset dir="${workspace.releases}/temp"/>
    </touch>
    <delete file="${workspace.releases}/${ant.project.name}-${release.version}-src.zip"/>
    <zip destfile="${workspace.releases}/${ant.project.name}-${release.version}-src.zip"
      basedir="${workspace.releases}/temp"/>
    <delete dir="${workspace.releases}/temp"/>
    
    <touch datetime="${release.date}" pattern="yyyyMMdd">
      <fileset dir="${workspace.releases}" includes="${ant.project.name}.js"/>
      <fileset dir="${workspace.releases}" includes="${ant.project.name}-min.js"/>
      <fileset dir="${workspace.releases}" includes="${ant.project.name}-${release.major}.x.js"/>
      <fileset dir="${workspace.releases}" includes="${ant.project.name}-${release.major}.x-min.js"/>
      <fileset dir="${workspace.releases}" includes="${ant.project.name}-${release.version}-src.zip"/>
      <fileset dir="${workspace.releases}" includes="${ant.project.name}-${release.version}.zip"/>
    </touch>
    
    <replaceregexp file="${workspace}/package.json" match="(&quot;version&quot;: &quot;)\d+(?:\.\d+)+(\&quot;)" flags="g" replace="\1${release.version}\2" byline="false"/>  
  </target>
  
  <target name="test-min" depends="archive">
    <copy file="${release.min}" tofile="${workspace.test}/${ant.project.name}.js" overwrite="true"/>
  </target>
  
  <target name="test-dev" depends="archive">
    <copy file="${release.dev}" tofile="${workspace.test}/${ant.project.name}.js" overwrite="true"/>
  </target>
</project>