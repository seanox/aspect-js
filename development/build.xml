<?xml version="1.0" ?>
<project name="aspect-js" default="usage" basedir="..">
  <target name="usage">
    <echo>                                                         </echo>
    <echo> the following targets are available ...                 </echo>
    <echo>                                                         </echo>
    <echo>   release    builds the final scripts and creates       </echo>
    <echo>              the archives for the distribution.         </echo>
    <echo>                                                         </echo>
    <echo>   changes    synchronizes README.md with CHANGES        </echo>
    <echo>                                                         </echo>
    <echo>   test       creates a release for testing              </echo>
    <echo>                                                         </echo>
    <echo>   debug      Creates a release for testing in debug mode</echo>
  </target>
  
  <property name="workspace" value="${basedir}"/>
  <property name="workspace.sources" value="${workspace}/sources"/>
  <property name="workspace.test" value="${workspace}/test"/>
  <property name="workspace.release" value="${workspace}/release"/>
  
  <fileset id="fileset.sources" dir="${workspace.sources}">
    <include name="extension.js"/>
    <include name="datasource.js"/>
    <include name="messages.js"/>
    <include name="composite.js"/>
    <include name="mvc.js"/>
    <include name="test.js"/>
  </fileset>   
  
  <fileset id="fileset.project" dir="${workspace}">
    <include name="development/build.xml"/>
    <include name="manual/**/*.*"/>
    <include name="server/**/*.*"/>
    <include name="sources/*.js"/>
    <include name="test/**/*.*"/>
    <include name=".project"/>
    <include name="CHANGES"/>
    <include name="LICENSE"/>
    <include name="README.md"/>
    <exclude name="**/aspect-js.js"/>
    <exclude name="**/*.zip"/>
  </fileset>   
    
  <macrodef name="release-locate">
    <sequential>
      <copy file="CHANGES" tofile="CHANGES.tmp" overwrite="true"/>
      <replaceregexp file="CHANGES.tmp"
          match="(?s)^\s*([\d\.x]+) (\d{4})([\dx]+).*$" flags="g" byline="false"
          replace="release.version=\1&#x000D;release.year=\2&#x000D;release.date=\2\3&#x000D;"/>
      <replaceregexp file="CHANGES.tmp" match="x+" replace="0000" flags="g" byline="false"/>
      <loadproperties>
        <file file="CHANGES.tmp"/>
      </loadproperties>
      <delete file="CHANGES.tmp"/>
      <echo file="CHANGES.tmp" message="release.major=${release.version}"/>
      <replaceregexp file="CHANGES.tmp"
          match="(?&lt;=\d+)\." byline="true" replace="&#x000D;release.minor="/>
      <replaceregexp file="CHANGES.tmp"
          match="(?&lt;=\d+)\." byline="true" replace="&#x000D;release.patch="/>
      <loadproperties>
        <file file="CHANGES.tmp"/>
      </loadproperties>
      <delete file="CHANGES.tmp"/>
    </sequential>
  </macrodef> 

  <target name="changes">
    <replaceregexp file="${workspace}/CHANGES" match="&#x00E4;" replace="ae" flags="g"/>
    <replaceregexp file="${workspace}/CHANGES" match="&#x00C4;" replace="Ae" flags="g"/>
    <replaceregexp file="${workspace}/CHANGES" match="&#x00F6;" replace="oe" flags="g"/>
    <replaceregexp file="${workspace}/CHANGES" match="&#x00D6;" replace="Oe" flags="g"/>
    <replaceregexp file="${workspace}/CHANGES" match="&#x00FC;" replace="ue" flags="g"/>
    <replaceregexp file="${workspace}/CHANGES" match="&#x00DC;" replace="Ue" flags="g"/>
      
    <copy file="${workspace}/CHANGES" tofile="${workspace}/CHANGES.tmp" overwrite="true"/>
    <replaceregexp file="${workspace}/CHANGES.tmp" match="^\s+" replace="" byline="false"/>
    <replaceregexp file="${workspace}/CHANGES.tmp" match="(?s)^(.*?)[\r\n]+\d[\d\. x]+.*$" replace="\1" byline="false"/>
    <replaceregexp file="${workspace}/CHANGES.tmp" match="^(.*?)\s*$" replace="\1  " flags="g" byline="true"/>
    <replaceregexp file="${workspace}/CHANGES.tmp" match="^(\d[\.\d x]+)[^\r\n]*" replace="## \1" byline="false"/>
    <replaceregexp file="${workspace}/CHANGES.tmp" match="^ {0,4}([A-Z]+:.*)\s*$" replace="\1" byline="true"/>
    <replaceregexp file="${workspace}/CHANGES.tmp" match="(?s)[\r\n]+ [^\r\n]+" replace="" flags="g" byline="false"/>
    <replaceregexp file="${workspace}/CHANGES.tmp" match="^(## \d[\.\d]+ \d+)(  )" replace="\1\2" flags="g" byline="true"/>
    <replaceregexp file="${workspace}/CHANGES.tmp" match="^(## \d[\.\d]+ \d+x+)(  )" replace="\1 (upcoming version)\2" flags="g" byline="true"/>    <loadresource property="changes">
      <file file="${workspace}/CHANGES.tmp"/>
    </loadresource>
    <delete file="${workspace}/CHANGES.tmp"/>
    <replaceregexp file="${workspace}/README.md"
        match="(?si)(# Changes\s+).*?(\[Read more\])" flags="g" byline="false"
        replace="\1${changes}${line.separator}${line.separator}\2"/>
    <tstamp>
      <format property="now.year" pattern="yyyy"/>
    </tstamp>    
    <replaceregexp file="${workspace}/README.md"
        match="(?si)(?&lt;=\(C\)\s)\d{4}\b" flags="g" byline="true"
        replace="${now.year}"/>

    <copy file="${workspace}/CHANGES" tofile="${workspace}/CHANGES.tmp" overwrite="true"/>
    <replaceregexp file="${workspace}/CHANGES.tmp" match="(?s)(?:^|^(?:.*?[\r\n]+))(\d(?:\.\d)+) \d+\s.*$" replace="release.version.current=\1" byline="false"/>
    <loadproperties srcfile="${workspace}/CHANGES.tmp"/>
    <delete file="${workspace}/CHANGES.tmp"/>
    <replaceregexp file="${workspace}/README.md"
        match="(Seanox ${ant.project.name} )\d+(\.\d+)*" flags="g" byline="false"
        replace="\1${release.version.current}"/>
    <replaceregexp file="${workspace}/README.md"
        match="(seanox/${ant.project.name}/releases/download/)\d+(?:\.\d+)*(/${ant.project.name}-)\d+(?:\.\d+)*(\.zip)" flags="g" byline="false"
        replace="\1${release.version.current}\2${release.version.current}\3"/>
    <replaceregexp file="${workspace}/README.md"
        match="(seanox/${ant.project.name}/archive/refs/tags/)\d+(?:\.\d+)*(\.zip)" flags="g" byline="false"
        replace="\1${release.version.current}\2"/>
  </target>
  
  <target name="release">
    <release-locate/>

    <delete dir="${workspace.release}" excludes="*.zip"/>
    
    <property name="release.file" value="${workspace.release}/${ant.project.name}.js"/>
    <property name="release.file.min" value="${workspace.release}/${ant.project.name}-min.js"/>

    <concat destfile="${release.file}" append="false">
      <filelist dir="${workspace.sources}">
        <file name="extension.js"/>
        <file name="datasource.js"/>
        <file name="messages.js"/>
        <file name="composite.js"/>
        <file name="mvc.js"/>
        <file name="test.js"/>
      </filelist>   
    </concat>

    <replaceregexp file="${release.file}" match="(?s)(?&lt;=\S)(/\*\*)" flags="g" replace="${line.separator}${line.separator}\1" byline="false"/>
    <replaceregexp file="${release.file}" match="(?s)(?&lt;=.)(?:(/\*(?:\*\s+)+)LIZENZBEDINGUNGEN.*?----\s+(?:\s*\*\s+)*)" flags="g" replace="\1" byline="false"/>
    <copy file="${release.file}" tofile="${workspace.release}/${ant.project.name}-${release.major}.x.js" overwrite="true"/>

    <exec executable="cmd.exe" dir="compress">
      <arg value="/c npm link ."/>
    </exec>
    <exec executable="cmd.exe" dir="compress">
      <arg value="/c uglifyjs ..\release\aspect-js.js  -c -m -o ..\release\aspect-js-min.js"/>
    </exec>
    <exec executable="cmd.exe" dir="compress">
      <arg value="/c npm uninstall -g uglify-js"/>
    </exec>
    <copy file="${release.file.min}" tofile="${workspace.release}/${ant.project.name}-${release.major}.x-min.js" overwrite="true"/>

    <copy file="CHANGES" tofile="${workspace.release}/release.txt"/>
    <copy file="LICENSE" tofile="${workspace.release}/license.txt"/>
    <touch datetime="${release.date}" pattern="yyyyMMdd">
      <fileset dir="${workspace.release}" includes="${ant.project.name}-${release.major}.x.js"/>
      <fileset dir="${workspace.release}" includes="${ant.project.name}-${release.major}.x-min.js"/>
      <fileset dir="${workspace.release}" includes="release.txt"/>
      <fileset dir="${workspace.release}" includes="license.txt"/>
    </touch>     
    <delete file="${workspace.release}/${ant.project.name}-${release.version}.zip"/>
    <zip destfile="${workspace.release}/${ant.project.name}-${release.version}.zip">
      <fileset dir="${workspace.release}" includes="${ant.project.name}-${release.major}.x.js"/>
      <fileset dir="${workspace.release}" includes="${ant.project.name}-${release.major}.x-min.js"/>
      <fileset dir="${workspace.release}" includes="release.txt"/>
      <fileset dir="${workspace.release}" includes="license.txt"/>
    </zip>   
    
    <delete>
      <fileset dir="${workspace.release}">
        <exclude name="*.js"/>
        <exclude name="*.zip"/>
      </fileset>
    </delete>

    <delete dir="${workspace.release}/temp"/>
    <mkdir dir="${workspace.release}/temp/${ant.project.name}-${release.version}"/>
    <copy todir="${workspace.release}/temp/${ant.project.name}-${release.version}">
      <fileset refid="fileset.project"/>
    </copy>
    <touch datetime="${release.date}" pattern="yyyyMMdd">
      <fileset dir="${workspace.release}/temp"/>
    </touch>
    <delete file="${workspace.release}/${ant.project.name}-${release.version}-src.zip"/>
    <zip destfile="${workspace.release}/${ant.project.name}-${release.version}-src.zip"
        basedir="${workspace.release}/temp"/>
    <delete dir="${workspace.release}/temp"/>

    <touch datetime="${release.date}" pattern="yyyyMMdd">
      <fileset dir="${workspace.release}" includes="${ant.project.name}.js"/>
      <fileset dir="${workspace.release}" includes="${ant.project.name}-min.js"/>
      <fileset dir="${workspace.release}" includes="${ant.project.name}-${release.major}.x.js"/>
      <fileset dir="${workspace.release}" includes="${ant.project.name}-${release.major}.x-min.js"/>
      <fileset dir="${workspace.release}" includes="${ant.project.name}-${release.version}-src.zip"/>
      <fileset dir="${workspace.release}" includes="${ant.project.name}-${release.version}.zip"/>
    </touch>
    
    <replaceregexp file="${workspace}/package.json" match="(&quot;version&quot;: &quot;)\d+(?:\.\d+)+(\&quot;)" flags="g" replace="\1${release.version}\2" byline="false"/>  
  </target>

  <target name="test" depends="release">
    <copy file="${release.file.min}" tofile="${workspace.test}/${ant.project.name}.js" overwrite="true"/>
  </target>

  <target name="debug" depends="release">
    <copy file="${release.file}" tofile="${workspace.test}/${ant.project.name}.js" overwrite="true"/>
  </target>
</project>