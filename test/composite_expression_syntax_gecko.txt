
    gecko
    ----

    mapping:
    ----
    and &amp;&amp;        empty !         div /
    eq  ==        eeq   ===       ge  &gt;=
    gt  &gt;         le    &lt;=        lt  &lt;
    mod %         ne    !=        nee !==
    not !         or    ||

    normal use:
    ----
    true true
    true true
    true true
    true true

    true true
    false false
    false false
    false false

    false false
    false false
    true true
    false false
    true true
    false false

    false false
    false false
    false false
    false false
    true true
    false false

    false false
    false false
    true true
    false false
    true true
    false false

    true true
    true true
    false false
    true true
    false false
    true true

    true true
    true true
    true true
    true true
    false false
    true true

    true true
    true true
    true true
    true true
    true true

    true true
    true true
    true true
    true true

    invalid word boundaries:
    ----
    trueandtrue is not defined
	trueandtrue true
    trueeqtrue is not defined
	trueeqtrue true
    identifier starts immediately after numeric literal
	1le2 true
    identifier starts immediately after numeric literal
	1ne2 true

    true true
    identifier starts immediately after numeric literal
	2ge1 true
    identifier starts immediately after numeric literal
	1lt2 true
    true true
    unexpected token: string literal
	notempty'x' true

    identifier starts immediately after numeric literal
	(25div5)eq5 unexpected token: identifier
	(25 /5)eq5
    identifier starts immediately after numeric literal
	2gt1 true
    identifier starts immediately after numeric literal
	(10mod3)eq1 unexpected token: identifier
	(10%3)eq1
    trueorfalse is not defined
	trueorfalse true

    lower / upper case:
    ----
    true true
    true true
    true true
    true true

    true true
    true true
    true true
    true true
    true true

    true true
    true true
    true true
    true true

    various
    ----
    -1
    1
    -12

    unknown is not defined
	unknown
    unknown is not defined
	unknown + '123'

    A1: Peter is not defined
	Peter
    A2: Peter is not defined
	Peter.und.der.Wolf
    A3: Peter is not defined
	Peter.und.der()

    B1: [object HTMLInputElement]
    B2: document.getElementById(...).value is not a function
	document.getElementById("HiddenField").value()
    B3: Test-HF

    C1: private names aren't valid in this context
	#document.getElementById("HiddenField")
    C2: private names aren't valid in this context
	#document.getElementById("HiddenField").value()
    C3: private names aren't valid in this context
	#document.getElementById("HiddenField").value()

    D1:

    E1: '#' not followed by identifier
	#
    E2: '#' not followed by identifier
	# + #

    F1: document.getElementById(...).value is not a function
	'123' + document.getElementById("HiddenField").value() + 'abc'
    F2: 123Test-HFabc

    G1: [object HTMLInputElement]
    G2: document.getElementById(...).document is undefined
	document.getElementById("HiddenField_1").document.getElementById("HiddenField_1")
    G3: document.getElementById(...).document is undefined
	document.getElementById("HiddenField_1").document.getElementById("HiddenField_2")
    G4: unexpected token: identifier
	document.getElementById("HiddenField_1") document.getElementById("HiddenField_2")
    G5: unexpected token: identifier
	document.getElementById("HiddenField_1")document.getElementById("HiddenField_2")

    X0: <input type="hidden" id="HiddenField" value="Test-HF">
    X1: <input type="hidden" id="HiddenField_1" value="Test-HF_A">
    X2: <input type="hidden" id="HiddenField_2" value="Test-HF_B">
    X3: <input type="hidden" id="HiddenField_3" value="Test-HF_C">

    O1: <span>undefined</span>
    O2: <span>xa() {
                return 122;
            }</span>
    O3: <span>122</span>
    O4: <span>xxxx</span>
    O5: <span>xxxx</span>
    O6: <span>xxxxx</span>
    O7: <span><i>Hallo</i></span>

    P1: abcdef #
    P2: abcdef #

    Q1: abcdef
    Q2: abcdef
    Q3: abcdef
    Q4: abcdef
    Q5: abc' + 'def
    Q6: abc" + "def

    QA: abc\def\
    QB: abc\def\
    QC: abc\def\
    QD: abc\def\
    QE: abc\' + 'def\
    QF: abc\" + "def\

    R1: abc'd'ef
    R2: abc"d"ef
    R3: abc'd"ef
    R4: abc'd"ef
    R5: abc'd'ef
    R6: abc"d"ef
    R7: abc'd"ef
    R8: abc'd"ef

    S1: <span>6</span>
